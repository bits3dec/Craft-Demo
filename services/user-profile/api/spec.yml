openapi: 3.0.0

info:
  title: User Profile
  description: Open API spec for User Profile
  version: 0.0.1

servers:
  - url: "http://localhost:8080"


paths:
  /user-profile/v1/profile:
    get:
      tags:
        - user-profile
      operationId: getUserProfile
      summary: Get user profile of the user
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: User profile of the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserProfileResponse"

    post:
      tags:
        - user-profile-request
      operationId: createUserProfile
      summary: Create a new user profile of the user
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserProfileRequest"
      responses:
        "200":
          description: User profile created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserProfileResponse"

    put:
      tags:
        - user-profile-request
      operationId: updateUserProfile
      summary: Update user profile of the user
      parameters:
        - $ref: "#/components/parameters/userId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfileRequest"
      responses:
        "200":
          description: User profile created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserProfileResponse"

  /user-profile/v1/profile/request-details:
    get:
      tags:
        - user-profile-request
      operationId: getUserProfileRequestDetails
      summary: Get user profile request details
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/requestId"
      responses:
        "200":
          description: User profile request details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserProfileRequestDetailsResponse"

components:
  parameters:
    userId:
      in: header
      name: x-user-id
      required: true
      schema:
        type: string

    requestId:
      in: query
      name: requestId
      required: true
      schema:
        type: string

  schemas:
    UserProfile:
      type: object
      required:
        - companyName
        - legalName
        - businessAddress
        - legalAddress
        - email
        - website
      properties:
        companyName:
          type: string
        legalName:
          type: string
        businessAddress:
          $ref: '#/components/schemas/Address'
        legalAddress:
          $ref: '#/components/schemas/Address'
        pan:
          type: string
        ein:
          type: string
        email:
          type: string
        website:
          type: string

    Address:
      type: object
      required:
        - line1
        - line2
        - city
        - state
        - country
        - zip
      properties:
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zip:
          type: string

    RequestStatus:
      type: string
      enum: [IN_PROGRESS, ACCEPTED, REJECTED]

    RequestOperation:
      type: string
      enum: [CREATE, UPDATE]

    GetUserProfileResponse:
      type: object
      required:
        - userProfile
      properties:
        userProfile:
          $ref: "#/components/schemas/UserProfile"

    CreateUserProfileRequest:
      type: object
      required:
        - userProfile
      properties:
        userProfile:
          $ref: "#/components/schemas/UserProfile"

    CreateUserProfileResponse:
      type: object
      required:
        - requestUuid
      properties:
        requestUuid:
          type: string

    UpdateUserProfileRequest:
      type: object
      required:
        - userProfile
      properties:
        userProfile:
          $ref: "#/components/schemas/UserProfile"

    UpdateUserProfileResponse:
      type: object
      required:
        - requestUuid
      properties:
        requestUuid:
          type: string

    GetUserProfileRequestDetailsResponse:
      type: object
      required:
        - requestDetails
      properties:
        requestDetails:
          $ref: "#/components/schemas/UserProfileRequestDetails"

    UserProfileRequestDetails:
      type: object
      required:
        - requestId
        - operation
        - status
      properties:
        requestId:
          type: string
        operation:
          $ref: "#/components/schemas/RequestOperation"
        status:
          $ref: '#/components/schemas/RequestStatus'
